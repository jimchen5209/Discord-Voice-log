diff --git a/lib/structures/Message.js b/lib/structures/Message.js
index 7eac7d3630f48fefda3667a6f2738d151ba8fae2..deb28439bef28e388fd6500267ddda5d160d3eda 100644
--- a/lib/structures/Message.js
+++ b/lib/structures/Message.js
@@ -83,20 +83,14 @@ class Message extends Base {
 
     if (data.message_snapshots && this.messageReference) {
       this.messageSnapshots = data.message_snapshots.map((snapshot) => {
-        const channel = this._client.getChannel(this.messageReference.channelID);
-        let message;
-
         snapshot.message.id = this.messageReference.messageID;
-
-        if (channel) {
-          message = channel.messages.update(snapshot.message, this._client);
-        } else {
-          message = new Message(snapshot.message, this._client);
-        }
+        snapshot.message.channel_id = this.messageReference.channelID;
+        snapshot.message.guild_id = this.messageReference.guildID;
+        snapshot.message.author = { id: "-1"}
 
         return {
           guildID: this.messageReference.guildID,
-          message: message,
+          message: new Message(snapshot.message, this._client),
         };
       });
     }
@@ -147,7 +141,7 @@ class Message extends Base {
     }
 
     if (this.channel.guild) {
-      if (data.member) {
+      if (data.member && data.author.id !== "-1") {
         data.member.id = this.author.id;
         if (data.author) {
           data.member.user = data.author;
@@ -183,7 +177,11 @@ class Message extends Base {
         return user;
       });
 
-      this.roleMentions = data.mention_roles;
+      if (data.mention_roles) {
+        this.roleMentions = data.mention_roles;
+      } else {
+        this.roleMentions = ((this.content && this.content.match(/<@&[0-9]+>/g)) || []).map((mention) => mention.substring(3, mention.length - 1)) || [];
+      }
     }
     if (data.poll !== undefined) {
       this.poll = data.poll;
@@ -256,7 +254,7 @@ class Message extends Base {
       return this._channelMentions;
     }
 
-    return (this._channelMentions = ((this.content && this.content.match(/<#[0-9]+>/g)) || []).map((mention) => mention.substring(2, mention.length - 1)));
+    return (this._channelMentions = ((this.content && this.content.match(/<#[0-9]+>/g)) || []).map((mention) => mention.substring(2, mention.length - 1)) || []);
   }
 
   get cleanContent() {
diff --git a/lib/voice/VoiceConnection.js b/lib/voice/VoiceConnection.js
index 858a4b60a46388f0647a5a70a44c8c96a9c2ab25..dd4a970abd5c60c99d4079f51c9e39635bbb3172 100644
--- a/lib/voice/VoiceConnection.js
+++ b/lib/voice/VoiceConnection.js
@@ -378,7 +378,12 @@ class VoiceConnection extends EventEmitter {
           return;
         }
         if (code === 4006) {
-          reconnecting = false;
+          if (this.channelID) {
+            reconnecting = true;
+            err = null;
+          } else {
+            reconnecting = false;
+          }
         } else if (code === 4014) {
           if (this.channelID) {
             data.endpoint = null;
diff --git a/lib/voice/streams/OggOpusTransformer.js b/lib/voice/streams/OggOpusTransformer.js
index 8c2aeb78a35c8d3cdf79fa6e21b35ff0b9b4bd6d..24c72f353acb45b517863e5f12cab17f8e4a9de3 100644
--- a/lib/voice/streams/OggOpusTransformer.js
+++ b/lib/voice/streams/OggOpusTransformer.js
@@ -74,7 +74,7 @@ class OggOpusTransformer extends BaseTransformer {
   }
 
   _final(cb) {
-    if (!this._bitstream) {
+    if (!this._bitstream === undefined) {
       this.emit("error", new Error("No Opus stream was found"));
     }
     cb();
